// ****************************************************************************
//                                                                            *
// Important notes                                                            *
//                                                                            *
// ****************************************************************************

// Settings made in *.factories files will overwrite settings made here.
// Factories are cvar values bound to a specific game type like FFA, Duel and
// so on. If you want to make game type specific adjustments, consider creating
// a factory instead of setting those values here.

// Settings made in this file will overwrite any settings made by using command
// line parameters given to the Quake Live dedicated server executable.
// The provided Docker images which form the foundation of the Quake Live
// dedicated server framework, offer to use command line parameters through the
// use of Docker container environment variables.
// Beware that when you set values here, you will not be able to set them through
// a Docker container's environment variable anymore.
// You can setup the following cvars as Docker container environment variables.

// com_hunkMegs - Sets the amount of memory in mega bytes reserved for the server.
// g_password - Password which players have to enter if they want to access the server.
// net_port - The game port. If you do not set it, the Docker container will set it
//            to the default value of 27960.
// qlx_plugins - A list of comma separated names of minqlx plugins. If no value is
//               given, the Docker container will create one containing all plugins
//               it found in the minqlx-plugins directory thus just loading every
//               plugin that is present.
// serverstartup - Can be used to setup the map which the server should run after
//                 startup.
// sv_hostname - The name of your server as it appears in the in-game server browser.
// sv_maxClients - Number of player slots available.
// sv_privateClients - Number of reserved player slots, requires sv_privatePassword
//                     to be also set.
// sv_privatePassword - Reserved player slots password.
// sv_tags - Tags that show up on the in-game server browser. This enables users to
//           filter servers.
// zmq_rcon_port - The port of the rcon api. The Docker container will set it to the
//                 same value as net_port if none was given.
// zmq_stats_port - The port of the stats api. The Docker container will set it to
//                  the same value as net_port plus 1000 if none was given.

// ****************************************************************************
//                                                                            *
// Cvar lists                                                                 *
//                                                                            *
// ****************************************************************************

// You can use these two locations as a resource for cvars.
// - http://www.regurge.at/ql/ - contains also pre-Steam cvars.
// - https://steamcommunity.com/sharedfiles/filedetails/?id=542672458 - Tries to
//   collect the differences between pre-Steam and post-Steam cvars.

// ****************************************************************************
//                                                                            *
// Map cycles                                                                 *
//                                                                            *
// ****************************************************************************

// Default map.
// Random Map - startRandomMap
// Specific map (factory is required) - map campgrounds ffa
// Default: set serverstartup "startRandomMap"
//
// NOTE: Other than statet in the official Quake Live documentation above
// that value does not have a default value. If you do not set something the
// server will not start correctly.
//
// set serverstartup "startRandomMap"

// ****************************************************************************
//                                                                            *
// Voting                                                                     *
//                                                                            *
// ****************************************************************************

// Allow voting. 0 = disabled, 1 = enabled.
set g_allowVote "1"

// Delay allowing votes for X milliseconds after map load.
set g_voteDelay "0"

// Limit users to X votes per map. 0 = No limit.
set g_voteLimit "0"

// Allow votes from mid game. 0 = disabled, 1 = enabled.
set g_allowVoteMidGame "0"

// Allow spectators to call votes. 0 = disabled, 1 = enabled.
set g_allowSpecVote "0"

// Add together the below values for which callvotes should be DISABLED:
// map              1
// map_restart      2
// nextmap          4
// gametype         8 (ex: "/callvote map campgrounds" will be allowed,
                       but "/callvote map campgrounds ca" will fail)
// kick             16
// timelimit        32
// fraglimit        64
// shuffle          128
// teamsize         256
// cointoss/random  512
// loadouts         1024
// end-game voting  2048
// ammo (global)    4096
// timers (item)    8192
// e.g to disable map and nextmap: 1+4=5
set g_voteFlags "0"

// ****************************************************************************
//                                                                            *
// Time limits / Round settings                                               *
//                                                                            *
// ****************************************************************************

// Ratio of players that must be ready before the match starts.
set sv_warmupReadyPercentage "0.51"

// Wait x seconds before allowing match to start to allow all players to connect.
set g_warmupDelay "15"

// Force the game to start after x seconds after someone readies up.
set g_warmupReadyDelay "0"

// Set to 1 to force players to spectator after g_warmupReady Delay, 2 to force ready up.
set g_warmupReadyDelayAction "1"

// Kick players who are inactive for X amount of seconds.  0 = disabled, 1 = enabled.
set g_inactivity "0"

// ****************************************************************************
//                                                                            *
// Communication                                                              *
//                                                                            *
// ****************************************************************************

// Voice Comms
// 0 = Limit voice comms to teams only during the match.
// 1 = Allow all players to talk to each other.
set g_alltalk "0"

// ****************************************************************************
//                                                                            *
// API's                                                                      *
//                                                                            *
// ****************************************************************************

// Rcon password
set zmq_rcon_password "iddqqiddqqiddqq"

// Stats password
set zmq_stats_password "iddqqiddqqiddqq"

// ****************************************************************************
//                                                                            *
// minqlx settings                                                            *
//                                                                            *
// ****************************************************************************

// The SteamID64 of the server owner. This is should be set, otherwise minqlx
// can't tell who the owner is and will refuse to execute admin commands.
set qlx_owner

// A comma-separated list of plugins that should be loaded at launch. The Docker
// container will create one containing all plugins it found in the minqlx-plugins
// directory thus just loading every plugin that is present. This only works if it
// it not set here.
// set qlx_plugins "balance, docs, essentials, log, permission, plugin_manager, commands, listmaps"

// The maximum number of logs the server keeps. 0 means no limit.
// set qlx_logs

// The maximum size in bytes of a log before it backs it up and starts on a
// fresh file. 0 means no limit.
// set qlx_logsSize

// ****************************************************************************
//                                                                            *
// minqlx Plugin: Essentials                                                  *
//                                                                            *
// Adds commands for the regular QLDS commands and some more. Adds            *
// functionality to restrict teamsize voting and to pass votes before it      *
// fails if the majority votes yes.                                           *
//                                                                            *
// ****************************************************************************

// A boolean deciding whether or not it should automatically pass votes before
// they fail if the majority voted yes.
// set qlx_votepass "1"

// If qlx_votepass is 1, determines the percentage (in decimal) of in-game
// players required to vote before it automatically passes any votes.
// set qlx_votepassThreshold  "0.33"

// The minimum teamsize allowed to vote for. !teamsize can override this.
// set qlx_teamsizeMinimum "1"

// The maximum teamsize allowed to vote for. !teamsize can override this.
// set qlx_teamsizeMaximum "8"

// ****************************************************************************
//                                                                            *
// minqlx Plugin: MOTD                                                        *
//                                                                            *
// Adds commands to set a message of the day.                                 *
//                                                                            *
// ****************************************************************************

// The path to a sounds that is played when players connect and have the MOTD
// printed to them.
// set qlx_motdSound "sound/vo/crash_new/37b_07_alt.wav"

// The header printed right before the MOTD itself.
// set qlx_motdHeader "^6======= ^7Message of the Day ^6======="

// ****************************************************************************
//                                                                            *
// minqlx Plugin: Log                                                         *
//                                                                            *
// A plugin that logs chat and commands. All logs go to fs_homepath/chatlogs. *
//                                                                            *
// ****************************************************************************

// The maximum number of logs to keep around. If set to 0, no maximum is enforced.
// set qlx_chatlogs "0"

// The maximum size of a log in bytes before it starts with a new one.
// set qlx_chatlogsSize "5000000"

// ****************************************************************************
//                                                                            *
// minqlx Plugin: Workshop                                                    *
//                                                                            *
// A plugin that allows the use of custom workshop items that the server      *
// might not reference by default, and thus not have the client download them *
// automatically.                                                             *
//                                                                            *
// ****************************************************************************

// A comma-separated list of workshop IDs for items you want to force the client
// to download. Use this for custom resources, such as sounds packs and whatnot.
// set qlx_workshopReferences ""